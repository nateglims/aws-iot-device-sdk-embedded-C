name: Docker Image CI

on:
  push:
    branches:
      - development
      - ci/*
  pull_request:
    branches: [ development ]
  workflow_dispatch:

jobs:

  unittest:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag csdk-test --target unittest
    - name: Run Tests
      run: docker run --name test csdk-test:latest make -C build/ all test coverage CTEST_OUTPUT_ON_FAILURE=TRUE
    - name: Copy Coverage Info and Strip Test and 3rd Party Coverage
      run: |
        docker cp test:/build/coverage.info coverage.info
        sudo apt-get install lcov
        lcov --rc lcov_branch_coverage=1 --remove coverage.info '*test*' --output-file coverage.info
        lcov --rc lcov_branch_coverage=1 --remove coverage.info '*CMakeCCompilerId*' --output-file coverage.info
        lcov --rc lcov_branch_coverage=1 --remove coverage.info '*3rdparty*' --output-file coverage.info
        lcov --rc lcov_branch_coverage=1 --remove coverage.info '*third_party*' --output-file coverage.info
        lcov --rc lcov_branch_coverage=1 --remove coverage.info '*demo*' --output-file coverage.info
        lcov --rc lcov_branch_coverage=1 --remove coverage.info '*platform*' --output-file coverage.info
        lcov --rc lcov_branch_coverage=1 --remove coverage.info '*shadow*' --output-file coverage.info  # For now this isn't what we want to look at.
        lcov --list coverage.info
    - name: lcov-cop
      uses: ChicagoFlutter/lcov-cop@v1.0.2
      with:
        path: "./coverage.info"
        min_coverage: 99
        exclude: "**/*test*"

  integtest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build Integration Environment with Docker Compose
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml up -d
    - name: Run Tests
      run: docker exec csdk_integtest make -C build/ all test CTEST_OUTPUT_ON_FAILURE=TRUE
